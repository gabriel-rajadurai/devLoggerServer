buildscript{
    dependencies{
        classpath 'io.github.fvarrui:javapackager:1.5.1'
    }
}

plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.5.10'

    id 'org.openjfx.javafxplugin' version '0.0.9'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
}

javafx {
    version = '15.0.1'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics']
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

dependencies {

    implementation fileTree(include: ['*.jar', '*.so'], dir: 'libs')

    // Align versions of all Kotlin components
    implementation platform('org.jetbrains.kotlin:kotlin-bom')

    // Use the Kotlin JDK 8 standard library.
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    // Use the tornadofx
    implementation "no.tornado:tornadofx:1.7.20"
//    implementation "no.tornado:tornadofx-controls:1.0.4"
//    implementation "no.tornado:tornadofx-controlsfx:0.1"

    //Ktor
    implementation "io.ktor:ktor-server-netty:1.6.0"
    implementation "io.ktor:ktor-websockets:1.6.0"

    implementation "com.google.code.gson:gson:2.8.6"

    //DB
    implementation "org.jetbrains.exposed:exposed-core:0.29.1"
    implementation "org.jetbrains.exposed:exposed-dao:0.29.1"
    implementation "org.jetbrains.exposed:exposed-jdbc:0.29.1"
    implementation "org.xerial:sqlite-jdbc:3.25.2"
}

apply plugin: 'io.github.fvarrui.javapackager.plugin'

mainClassName = "com.example.demo.app.MyApp"

//Packaging configs
//javapackager {
//    // common configuration
//    mainClass = 'com.gabriel.devlogServer.app.MyApp'
//    bundleJre = true
//    generateInstaller = false
//}
//
//task packageMyAppForMac(type: io.github.fvarrui.javapackager.gradle.PackageTask, dependsOn: build) {
//    platform = mac
//    createTarball = true
//    jdkPath = file('/Applications/Android Studio.app/Contents/jre/jdk')
//}

task packageMyApp(type: io.github.fvarrui.javapackager.gradle.PackageTask, dependsOn: build) {
    mainClass = 'com.gabriel.devlogServer.app.MyApp'
    bundleJre = true
    platform = io.github.fvarrui.javapackager.model.Platform.auto
}